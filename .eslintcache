[{"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/index.js":"1","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/reportWebVitals.js":"2","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/app.js":"3","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/About.js":"4","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/Homepage.js":"5","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/NotFound.js":"6","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/blog.js":"7","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/Contact/contactpage.js":"8","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/globalnews.js":"9","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/applinks/builtnyc/nycicon.js":"10","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/logo/logo.js":"11","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/Contact/useForm.js":"12","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/sidebar/sidebar.js":"13","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/applinks/presentglobalnews/presentgn.js":"14","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/applinks/echochamber/echoicon.js":"15","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/Contact/submit.js":"16","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/Contact/validateinfo.js":"17","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/blog_posts/post_one.js":"18","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/blog_posts/post_three.js":"19","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/blog_posts/post_two.js":"20","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/blog_posts/post_four.js":"21","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/backToTop/backToTop.js":"22","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/Instructions/instructions.js":"23","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/Map/map.js":"24","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/LocalityCheckBox/checkbox.js":"25","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/NewsDisplay/newsdisplay.js":"26","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/SearchBar/searchbar.js":"27","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/Map/getNews.js":"28","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/Map/getplacename.js":"29","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/NewsDisplay/articlelist.js":"30","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/intro.js":"31","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/applinks/cardscomponent/cards.js":"32","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/socials/socials.js":"33","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/applinks/cardscomponent/infopopup.js":"34","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/About/aboutglobalnews.js":"35","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/localstorage/localstorage.js":"36","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/dropdown/dropdown.js":"37","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/blog_posts/post_five.js":"38","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/resume.js":"39","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/myGa.js":"40","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/landingpage.js":"41","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/GNlogin.js":"42","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/GNSignup.js":"43","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/config/firebase.js":"44","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/GNhome.js":"45","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/savedplaces.js":"46","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/current.js":"47","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/Bulletin/bulletin.js":"48","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/functions/firebasefuncs.js":"49"},{"size":500,"mtime":1634834407777,"results":"50","hashOfConfig":"51"},{"size":362,"mtime":1634834407786,"results":"52","hashOfConfig":"51"},{"size":1769,"mtime":1663212043073,"results":"53","hashOfConfig":"51"},{"size":1624,"mtime":1660924372411,"results":"54","hashOfConfig":"51"},{"size":6478,"mtime":1663124314233,"results":"55","hashOfConfig":"51"},{"size":202,"mtime":1634834407672,"results":"56","hashOfConfig":"51"},{"size":967,"mtime":1660924216585,"results":"57","hashOfConfig":"51"},{"size":3756,"mtime":1660924208721,"results":"58","hashOfConfig":"51"},{"size":4378,"mtime":1663183511211,"results":"59","hashOfConfig":"51"},{"size":2337,"mtime":1648331378396,"results":"60","hashOfConfig":"51"},{"size":355,"mtime":1651870401444,"results":"61","hashOfConfig":"51"},{"size":789,"mtime":1634834407672,"results":"62","hashOfConfig":"51"},{"size":2057,"mtime":1661205857270,"results":"63","hashOfConfig":"51"},{"size":3012,"mtime":1648337232850,"results":"64","hashOfConfig":"51"},{"size":2762,"mtime":1648350024199,"results":"65","hashOfConfig":"51"},{"size":681,"mtime":1650302550397,"results":"66","hashOfConfig":"51"},{"size":411,"mtime":1650056417509,"results":"67","hashOfConfig":"51"},{"size":6777,"mtime":1650402401843,"results":"68","hashOfConfig":"51"},{"size":8079,"mtime":1649962239658,"results":"69","hashOfConfig":"51"},{"size":8205,"mtime":1650389977561,"results":"70","hashOfConfig":"51"},{"size":6251,"mtime":1650303378662,"results":"71","hashOfConfig":"51"},{"size":544,"mtime":1651870376396,"results":"72","hashOfConfig":"51"},{"size":1434,"mtime":1634834407673,"results":"73","hashOfConfig":"51"},{"size":8233,"mtime":1663612842382,"results":"74","hashOfConfig":"51"},{"size":1315,"mtime":1660683952497,"results":"75","hashOfConfig":"51"},{"size":5571,"mtime":1663529833215,"results":"76","hashOfConfig":"51"},{"size":1220,"mtime":1660682428705,"results":"77","hashOfConfig":"51"},{"size":584,"mtime":1636136198078,"results":"78","hashOfConfig":"51"},{"size":700,"mtime":1636057349108,"results":"79","hashOfConfig":"51"},{"size":1880,"mtime":1663527559704,"results":"80","hashOfConfig":"51"},{"size":590,"mtime":1651615480718,"results":"81","hashOfConfig":"51"},{"size":1831,"mtime":1660925507547,"results":"82","hashOfConfig":"51"},{"size":1839,"mtime":1661205868580,"results":"83","hashOfConfig":"51"},{"size":7871,"mtime":1658879682978,"results":"84","hashOfConfig":"51"},{"size":2461,"mtime":1660598950393,"results":"85","hashOfConfig":"51"},{"size":195,"mtime":1651706052352,"results":"86","hashOfConfig":"51"},{"size":1322,"mtime":1660924406510,"results":"87","hashOfConfig":"51"},{"size":6341,"mtime":1652480267843,"results":"88","hashOfConfig":"51"},{"size":5671,"mtime":1660925540990,"results":"89","hashOfConfig":"51"},{"size":218,"mtime":1660929030248,"results":"90","hashOfConfig":"51"},{"size":1636,"mtime":1663539013422,"results":"91","hashOfConfig":"51"},{"size":2369,"mtime":1663553146771,"results":"92","hashOfConfig":"51"},{"size":3245,"mtime":1663549423453,"results":"93","hashOfConfig":"51"},{"size":1031,"mtime":1663207571190,"results":"94","hashOfConfig":"51"},{"size":2198,"mtime":1663617668507,"results":"95","hashOfConfig":"51"},{"size":1899,"mtime":1663359022825,"results":"96","hashOfConfig":"51"},{"size":441,"mtime":1663613572103,"results":"97","hashOfConfig":"51"},{"size":1981,"mtime":1663620841942,"results":"98","hashOfConfig":"51"},{"size":432,"mtime":1663552289854,"results":"99","hashOfConfig":"51"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"rpfwc3",{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"102"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"102"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"102"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"124"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"102"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"102"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"135","usedDeprecatedRules":"124"},{"filePath":"136","messages":"137","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"138","messages":"139","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"102"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"173","usedDeprecatedRules":"102"},{"filePath":"174","messages":"175","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"176","usedDeprecatedRules":"102"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"179","usedDeprecatedRules":"180"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"102"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"198","usedDeprecatedRules":"102"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"201","usedDeprecatedRules":"102"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"204","usedDeprecatedRules":"102"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"207","messages":"208","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"209","usedDeprecatedRules":"102"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/index.js",[],["216","217"],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/reportWebVitals.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/app.js",["218"],"import React, { Component } from \"react\";\nimport \"./app.css\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch,\n  Redirect,\n  HashRouter,\n} from \"react-router-dom\";\n\n//GlobalNews\nimport Globalnews from \"./Pages/apps/globalnews/src/globalnews\";\nimport LandingPage from \"./Pages/apps/globalnews/src/landingpage\";\nimport GNLogin from \"./Pages/apps/globalnews/src/GNlogin\";\nimport GNSignup from \"./Pages/apps/globalnews/src/GNSignup\";\nimport GNHomePage from \"./Pages/apps/globalnews/src/GNhome\";\n\n//Pages\n\nimport HomePage from \"./Pages/Homepage\";\nimport NotFound from \"./Pages/NotFound\";\nimport About from \"./Pages/About\";\nimport Blog from \"./Pages/blog\";\nimport ContactPage from \"./Pages/Contact/contactpage\";\nimport IntroScreen from \"./Pages/intro\";\nimport Resume from \"./Pages/resume\";\n\nclass App extends Component {\n  render() {\n    return (\n      <HashRouter>\n        <Switch>\n          <Route exact path=\"/Intro\" component={IntroScreen} />\n          <Route exact path=\"/\" component={HomePage} />\n          <Route exact path=\"/About\" component={About} />\n          <Route exact path=\"/Blog\" component={Blog} />\n          <Route exact path=\"/Contact\" component={ContactPage} />\n          <Route exact path=\"/resume\" component={Resume} />\n\n          <Route exact path=\"/globalnews\" component={Globalnews} />\n          <Route exact path=\"/globalnews/landingpage\" component={LandingPage} />\n          <Route exact path=\"/globalnews/login\" component={GNLogin} />\n          <Route exact path=\"/globalnews/signup\" component={GNSignup} />\n          <Route exact path=\"/globalnews/home\" component={GNHomePage} />\n\n          <Route path=\"/404\" component={NotFound} />\n          <Redirect to=\"/404\" />\n        </Switch>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/About.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/Homepage.js",["219"],"import React, { useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport myGa from \"../myGa\";\n\nimport Logo from \"../Components/logo/logo\"\nimport Sidebar from \"../Components/sidebar/sidebar\"\nimport \"./css/homepage.css\"\nimport gradientBubble from './../project_layout/Ellipse.png'\nimport Cards from \"../Components/applinks/cardscomponent/cards\"\nimport Socials from \"../Components/socials/socials\";\nimport  { firstVisit, getLocalVisitStatus} from \"../Components/localstorage/localstorage\";\nimport EchoIcon from \"../project_layout/echochambericon.png\";\nimport NYCIcon from \"../project_layout/builtnyclogo.png\";\nimport globalnewsIcon from \"../project_layout/worldnews.png\";\nimport tyIcon from \"../project_layout/tyicon.png\"\nimport emailBuilderIcon from \"../project_layout/form.png\"\nimport TwitterIcon from '../project_layout/twitter.png'\n\n\nconst HomePage =  () =>  {\n\n\n\n  const [state,setState] = useState({\n    visitationStatus : false,\n    sidbarStatus: false,\n\n  })\n\n  const clickHandler = () => {\n    console.log('clicked')\n    setState(prevstate => ({\n      sidbarStatus: !prevstate.sidbarStatus\n    }))}\n   \n const history = useHistory();\n useEffect(() => {\n        // Runs after the first render() lifecycle\n  \n        const userVisitationStatus = getLocalVisitStatus();\n\n        if(userVisitationStatus === null || userVisitationStatus === undefined){\n              firstVisit()\n              history.push('/Intro')\n        } \n        myGa();\n    },[])\n\n \n    \n\n  \n    return (\n      \n\n      <div className= \"homepage_wrapper background-covering\"> \n        <div className= ''> </div>\n        <div className=\"fade-in\"> \n          <Logo />\n          <Sidebar clickHandler = {clickHandler}/>\n\n          <div className=\"projects\">\n\n            \n            <header>\n                <Socials sidebarStatus = {state.sidbarStatus}/>\n                <div className=\"welcome-border\">\n                  <div className=\"welcome-statement\">\n                    <h2 className='standard'> Welcome to my portfolio </h2>\n                  </div>\n                  <hr className=\"bar-long\"/>\n                    <div className=\"subheader-div\">\n                      <h2 className='standard'> Check out my projects below </h2>\n                 \n                    </div>\n              \n                  \n                </div>\n            </header>\n            \n            <div className=\"bubbles-wrapper\">\n                <img src = {gradientBubble} alt = 'graphic of bubbles falling down'className=\"left large\"/>\n                <img src = {gradientBubble} alt = 'graphic of bubbles falling down' className=\"small-bbl middle-left\"/>\n                <img src = {gradientBubble} alt = 'graphic of bubbles falling down' className=\"small-bbl middle-right\"/>\n                <img src = {gradientBubble} alt = 'graphic of bubbles falling down' className=\"right large\"/>\n                <img src = {gradientBubble} alt = 'graphic of bubbles falling down' className=\"small-bbl right-most\"/>\n\n            </div>\n\n\n\n            <section className=\"apps-section\">\n\n            <Cards alt = 'Global News' appTitle = 'Global News'\n                url = 'http://nissimram.com/#/globalnews'\n                githubUrl='https://github.com/nizoom/global_news'\n                stackList = 'ReactJS, React Router, Material UI, Azure, Google Cloud, LeafletJS.'\n                linkType = 'Link' \n                Description = {<p className='app-description'> Web app that finds localized news based on geolocation from map click.</p>}\n                 position = 'five' status = {state.popupStatus}\n                logo={globalnewsIcon} btnOneTxt='Try now'\n              />\n\n          \n             <Cards alt = 'Thank You Email Generator'  appTitle = 'Thank You Email Generator' stackList = ' ReactJS, ExpressJS, NodeJS, NodeMailer, and Handlebars.'\n                githubUrl = 'https://github.com/nizoom/TYTemplateBuilder#readme'\n                Description = {<p className='app-description'> Form web app that builds and sends templated thank you emails.</p>}\n                position = 'one' status = {state.popupStatus}\n                logo={emailBuilderIcon} btnOneTxt='View ReadMe'\n              /> \n\n            <Cards alt = 'Build NYC' appTitle = 'Build NYC' stackList = 'React JS, LeafletJS, ChartJS, SoQueryLanguage, NodeJS, ExpressJS.'\n                url = 'https://build-nyc.herokuapp.com/' \n                githubUrl = 'https://github.com/nizoom/BuildNYC'\n                Description ={ <p className='app-description'> Data visualization interface that illustrates building development in NYC. </p> }\n                 position = 'three' status = {state.popupStatus}\n                logo={NYCIcon} btnOneTxt='Try now'\n              /> \n\n                 \n            <Cards alt = 'Echo Chamber' appTitle = 'Echochamber' stackList = 'ReactJS, Material UI, NodeJS, ExpressJS.'\n                url = 'https://entertheechochamber.herokuapp.com/'\n                githubUrl='https://github.com/nizoom/Echochamber'\n                Description = {<p className='app-description'> Web scraping app that uses Twitter's  API to recreate a personal feed.</p>}\n               position = 'six' status = {state.popupStatus}\n                logo={EchoIcon} btnOneTxt='Try now'\n              /> \n\n            <Cards alt = 'Thank you Email Automation' appTitle = 'Thank You Email Automation' stackList = ' ExpressJS, NodeJS, NodeMailer, and Handlebars.'\n                githubUrl = 'https://github.com/nizoom/TYAutomation'\n                Description = {<p className='app-description'> Backend app that uses that generates custom daily thank you emails based on donations from an API.</p>}\n                 position = 'four' status = {state.popupStatus}\n                logo={tyIcon} btnOneTxt='View ReadMe'\n              /> \n              <Cards alt = 'Twitter API Clone'  appTitle = 'Twitter API Clone' stackList = 'Java, SpringBoot, JPA, PostgresQL, PGAdmin, Postman, Eclipse, Maven'\n                Description = {<p className='app-description'>  Java backend including endpoints to create users, like tweets, and follow accounts</p>}\n                position = 'two' status = {state.popupStatus}\n                githubUrl = 'https://github.com/nizoom/Twitter-API-Clone'\n                logo={TwitterIcon} btnOneTxt='View ReadMe'\n              /> \n            </section>\n         \n          </div>  \n        </div> \n      </div>\n      \n\n\n\n    )\n  }\n\n\nexport default HomePage;\n\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/NotFound.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/blog.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/Contact/contactpage.js",["220"],"import React, { useState } from \"react\"\nimport useForm from \"./useForm\"\nimport validate from \"./validateinfo\"\nimport \"./contact.css\";\nimport Sidebar from \"../../Components/sidebar/sidebar\";\nimport Logo from \"../../Components/logo/logo\"\nimport submitValidatedData from \"./submit\"\nimport cluster from \"../../project_layout/contactpagecluster.png\"\n\n\n\nconst ContactPage = () => {\n  // FORM CODE\n  const { handleChange, values, handleSubmit, errors, isSubmitting } = useForm(\n    validate, submitForm);\n\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n\n  function submitForm() {\n    setIsSubmitted(true)\n    submitValidatedData(values)\n\n  }\n\n  return (\n    <div className=\"contact-page-wrapper\">\n      <Logo />\n      <Sidebar clickHandler={null} />\n\n        <div className=\"contact-border\">\n          <div className=\"contact-form-wrapper\">\n            <h1 className=\"contact-intro\">  Please submit your message here and I'll get\n              back to you as soon as possible. </h1>\n            <div className=\"form-wrapper\">\n              <img src = {cluster} alt= 'bubble graphic' className=\"cluster\"/>\n                <form onSubmit={handleSubmit}\n                  action=\"#\" method=\"POST\" className=\"contact-form\">\n\n                  <div className=\"name-input-div form-line-wrapper\">\n                    <label htmlFor=\"Name\" className=\"form-label\" >\n                      Name:\n                    </label>\n                    <input type=\"text\" className=\"name-input contact-input-field\"\n                      placeholder=\"Name\" id=\"username\" name=\"name\"\n                      value={values.name}\n                      onChange={handleChange} />\n\n\n                    {errors.name &&\n                      <span className=\"err-span\">\n                        <p className=\"err\">{errors.name}</p>\n                      </span>}\n                  </div>\n\n                  <div className=\"email-input-div form-line-wrapper\">\n                    <label htmlFor=\"email\" className=\"form-label\" >\n                      Email:\n                    </label>\n                    <input type=\"email\" className=\"email-input contact-input-field\"\n                      placeholder=\"Email Address\" id=\"email\" name=\"reply_to\"\n                      value={values.reply_to}\n                      onChange={handleChange} />\n\n\n                    {errors.reply_to &&\n                      <span className=\"err-span\">\n                        <p className=\"err\">{errors.reply_to}</p>\n                      </span>}\n\n                  </div>\n\n\n                  <div className=\"message-input-div form-line-wrapper\">\n                    <label htmlFor=\"Message\" className=\"form-label textarea-label\" >\n                      Message:\n                    </label>\n                    <textarea rows=\"15\" cols=\"50\" className=\"message_field contact-input-field\"\n                      placeholder=\"Message\" id=\"message\" name=\"message\"\n                      value={values.message}\n                      onChange={handleChange} />\n\n                    {errors.message &&\n                      <span className=\"err-message-span\">\n                        <p className=\"err\"> {errors.message} </p>\n                      </span>}\n\n                      <div className=\"btn-div\" style={{ fontColor: \"white\" }}>\n                          <button className=\"form-input-btn\" type=\"submit\" >\n                            Submit\n                          </button>\n                  </div>\n          \n\n                </div>\n                  {isSubmitted ? <div className=\"form-success\"> <h4 className=\"success-msg\"> Sent! ✅\n                </h4> </div> : null}\n              </form>\n            </div>\n          </div>\n      </div>\n    </div >\n\n  )\n}\n\n\n\n\nexport default ContactPage;\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/globalnews.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/applinks/builtnyc/nycicon.js",[],["221","222"],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/logo/logo.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/Contact/useForm.js",["223"],"import { useState, useEffect } from \"react\";\n\nconst useForm = (validate, submitForm) => {\n  const [values, setValues] = useState({\n    name: \"\",\n    reply_to: \"\",\n    message: \"\"\n  })\n\n  const [errors, setErrors] = useState({})\n\n  const [isSubmitting, setIsSubmitting] = useState()\n\n  const handleChange = (e) => {\n    const { name, value } = e.target;\n    setValues({\n      ...values,\n      [name]: value\n    })\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setErrors(validate(values))\n    setIsSubmitting(true)\n  }\n\n  useEffect(() => {\n\n    if (Object.keys(errors).length === 0 && isSubmitting) {\n      console.log(\"useEffectFired\");\n      submitForm()\n    }\n  }, [isSubmitting])\n\n\n\n\n  return { handleChange, values, handleSubmit, errors }\n}\n\n\nexport default useForm;\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/sidebar/sidebar.js",["224"],"import React, { useState } from \"react\";\nimport \"./sidebar.css\"\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\n\n\nconst Sidebar = (props) => {\n\n\n  const [sidebarStatus, setSidebarStatus] = useState(false);\n\n  const sideBarBtnHandler = () => {\n    setSidebarStatus(!sidebarStatus)\n    console.log(props)\n    if(props.clickHandler != null) {\n      props.clickHandler()\n    } \n\n    // rerender nav \n    if(!sidebarStatus){\n        window.scrollTo({\n          top: 0,\n          behavior: \"smooth\"\n        }) \n    }\n  }\n\n    \n\n  return (\n    <div className=\"\">\n      <div className=\"\">\n        <div className={`classes ${sidebarStatus ? \"change\" : null}`}>\n          <button className=\"square-btn\"\n            onClick={() => { sideBarBtnHandler() }}>\n            <div className=\"bars-wrapper\"> \n              <div className=\"bar1\"></div>\n              <div className=\"bar2\"></div>\n              <div className=\"bar3\"></div>\n\n            </div>\n           \n          </button>\n        </div>\n\n      </div>\n\n      <nav className= {sidebarStatus ? \"nav slide-in\" : \"slide-out\"}>\n        <ul className= {sidebarStatus ? \"open slide-in\" : \"slide-out\"}>\n  \n          <li onClick={sideBarBtnHandler}>\n            <Link to=\"/\" className=\"link\" > Portfolio </Link>\n          </li>\n  \n          <li onClick={sideBarBtnHandler}> \n            <Link to=\"/About\" className=\"link\"> About </Link>\n          </li>\n  \n          <li onClick={sideBarBtnHandler}>\n            <Link to=\"/Blog\" className=\"link\"> Blog. </Link>\n          </li>\n  \n          <li onClick={sideBarBtnHandler}>\n            <a target=\"blank\" href=\"https://github.com/nizoom\"\n              className=\"link\">\n              GitHub </a>\n          </li>\n  \n          <li onClick={sideBarBtnHandler}>\n            <Link to=\"/Contact\" className=\"link\"> Contact </Link>\n          </li>\n  \n          <li onClick={sideBarBtnHandler}>\n            <Link to=\"/resume\" className=\"link\"> Resume </Link>\n          </li>\n  \n  \n        </ul>\n      </nav>\n\n        \n\n    </div>\n  )\n}\n\nexport default Sidebar;\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/applinks/presentglobalnews/presentgn.js",["225"],"import globalnewsIcon from \"../../../project_layout/worldnews.png\"\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\nimport React from \"react\";\nimport \"./presentgn.css\"\nimport \"../presentappstyles.css\"\nimport appIconCard from \"../../../project_layout/appiconcard.png\"\nimport appDescriptionCard from \"../../../project_layout/appdescriptioncard.png\"\n\nconst PresentGlobalNews = (props) => {\n\n\n  return (\n    <section className=\"whole-project-box\">\n\n\n    <div>\n     <h3 className=\"global-news-title\"> Try Global News</h3>\n     <Link to=\"/globalnews\" target=\"_blank\" rel=\"noopener noreferrer\">\n              {/* <h3 className=\"app_title\"> Try it out! </h3> */}\n              <img src={globalnewsIcon} alt=\"world news icon\" className=\"newsIcon\" />\n      <img src = {appIconCard} alt = 'icon card'className=\"global-new-icon-card\"/>\n\n            </Link>\n\n      \n    </div>\n\n    <div>\n      <div className=\"description-text-div\">\n          <p className=\"tech-used\">  <span className=\"stack\"> Tech stack: </span> <span className=\"tech-list\">ReactJS, React Router, Material UI, Azure, Google Cloud, LeafletJS.  </span> </p>\n          <button className=\"more-info-btn\"> Click here for more info</button>\n      </div>\n      <img src = {appDescriptionCard} alt = 'app description card' className=\"app-description-card news-desc-card-location\"/>\n      \n    \n\n    </div>\n    \n\n\n      {/* <div className=\"title-wrapper\">\n        <h3 className=\"project-title\"> Global News </h3>\n      </div>\n      <section className=\"project-wrapper\">\n        <div className=\"app-description\">\n          <p>\n            Global news is a novel way to access information about the world. The user is presented with a world map and\n            with a map click can learn about that place from a list of news articles generated from that location.\n            The longitude and latitude from a map click is converted, using Google Cloud services,\n            to a human readable address. The address is iterated through Azure's news API until relavent news appears.\n            The user can also narrow their search by entering a keyword before clicking on the map. That key word\n            will then be added to the parameters of the API query.\n            <br /> <br /> <br />\n            Technologies used: ReactJS, React Router, Material UI, Azure, Google Cloud, LeafletJS.\n\n          </p>\n\n        </div>\n\n\n\n        <div className=\"app-link-wrapper\" style={{\n          height: \"300px\", fontFamily: \"Montserrat, sans-serif\",\n          display: props.visibilityStatus === \"navOpen\" ? \"none\" : \"block\"\n        }}>\n          <div className=\"app-link\">\n            <Link to=\"/globalnews\" target=\"_blank\" rel=\"noopener noreferrer\">\n              <h3 className=\"app_title\"> Try it out! </h3>\n              <img src={globalnewsIcon} alt=\"world news icon\" className=\"newsIcon\" />\n\n            </Link>\n          </div>\n\n\n        </div>\n      </section> */}\n    </section>\n  )\n}\n\nexport default PresentGlobalNews\n// <span className=\"try\"> ","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/applinks/echochamber/echoicon.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/Contact/submit.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/Contact/validateinfo.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/blog_posts/post_one.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/blog_posts/post_three.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/blog_posts/post_two.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/blog_posts/post_four.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/backToTop/backToTop.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/Instructions/instructions.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/Map/map.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/LocalityCheckBox/checkbox.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/NewsDisplay/newsdisplay.js",["226","227"],"import React, { useRef, useEffect } from \"react\";\nimport ArticleList from \"./articlelist\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Container from \"@material-ui/core/Container\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst NewsDisplay = (props) => {\n  //Object that tracks properties about the data which inform what news header is to be displayed\n  let displayDataObj = {\n    newsAvailable: false,\n    topicWanted: false,\n    localityWanted: props.localityStatus,\n    dataAssessed: false,\n  };\n\n  let newsArray, localityName, country, topic;\n\n  if (props.dataForDisplay === \"NOTHINGFOUND\") {\n    //console.log(\"NothingFound\");\n    newsArray = undefined; //triggers no news display when newsArray is checked\n    //console.log(newsArray);\n  }\n\n  if (Array.isArray(props.dataForDisplay)) {\n    // successful click\n    // / checking is an array rather than the \"nothingfound\" str\n\n    if (props.dataForDisplay.length > 3) {\n      [newsArray, localityName, country, topic] = props.dataForDisplay;\n    } else {\n      //nonnational click\n      // here changing name of nonNationalName to country so that the WhatToDisplay\n      //function knows what to pick up on\n      [newsArray, country, topic] = props.dataForDisplay;\n      localityName = \"\";\n      displayDataObj.localityWanted = false;\n      //console.log(newsArray);\n    }\n  }\n  //console.log(newsArray, localityName, country, topic);\n\n  //based on the news results this function will change the displayDataObj\n\n  const assessData = (displayDataObj) => {\n    //console.log(`newsArray: ${newsArray}  length ${newsArray[0].length} `);\n    if (newsArray !== undefined) {\n      //if there is news\n\n      displayDataObj.newsAvailable = true;\n    }\n\n    if (localityName !== \"\" || localityName === !undefined) {\n      //if there is a locality\n\n      displayDataObj.localityWanted = true;\n      // local area searched\n      //console.log(localityWanted + \"localityWanted\");\n    }\n\n    if (topic !== \"\" || undefined) {\n      //if there is a topic\n      //user added topic\n\n      displayDataObj.topicWanted = true;\n    }\n    displayDataObj.dataAssessed = true;\n\n    return displayDataObj;\n  };\n\n  const assessedData = assessData(displayDataObj);\n\n  //WhatToDisplay -> based on assessed displayDataObj display the appropriate header\n\n  const WhatToDisplay = () => {\n    useEffect(() => {\n      //console.log(\"scrollfired\");\n      scrollIntoView();\n    }, [props.dataForDisplay]);\n\n    if (!displayDataObj.newsAvailable) {\n      //if no news\n      //console.log(\"Firing no news display\");\n      return (\n        <h3 className={`${classes.h1} ${classes.h1MediaQueries}`}>\n          {\" \"}\n          There is no results based on this location or topic. Try clicking a\n          city or town. You can also go back and turn off Localized search to\n          broaden your results to the national level\n        </h3>\n      );\n      //all possibilities assuming that there is news:\n    } //if there is news, its local, and topic/userfilter is used\n\n    if (displayDataObj.localityWanted && displayDataObj.topicWanted) {\n      return (\n        <h1 className={`${classes.h1} ${classes.h1MediaQueries}`}>\n          {\" \"}\n          Here is the news for {localityName}, {country} and {topic}\n        </h1>\n      );\n    }\n    // 2. local news only\n    if (!displayDataObj.topicWanted && displayDataObj.localityWanted) {\n      return (\n        <h1 className={`${classes.h1} ${classes.h1MediaQueries}`}>\n          {\" \"}\n          Here is the news for {localityName}, {country}{\" \"}\n        </h1>\n      );\n    }\n    //3. country news and topic / userfilter is used\n    if (!displayDataObj.localityWanted && displayDataObj.topicWanted) {\n      return (\n        <h1 sclassName={`${classes.h1} ${classes.h1MediaQueries}`}>\n          {\" \"}\n          Here is the news for {country} and {topic}{\" \"}\n        </h1>\n      );\n    }\n\n    // 4. country news only\n    if (!displayDataObj.localityWanted && !displayDataObj.topicWanted) {\n      return (\n        <h1 className={`${classes.h1} ${classes.h1MediaQueries}`}>\n          {\" \"}\n          Here is the news for {country}{\" \"}\n        </h1>\n      );\n    }\n\n    displayDataObj.dataAssessed = false;\n  };\n\n  const useStyles = makeStyles((theme) => ({\n    typographyStyle: {\n      color: \"#BC6C25\",\n      padding: \"2vh\",\n      fontWeight: \"700\",\n    },\n\n    h1: {\n      color: \"#FEFAE0\",\n    },\n\n    h1MediaQueries: {\n      \"@media (max-width:900px)\": {\n        fontSize: \"28px\",\n      },\n      \"@media (max-width:600px)\": {\n        fontSize: \"24px\",\n      },\n      \"@media (max-width:500px)\": {\n        fontSize: \"20px\",\n      },\n    },\n  }));\n\n  const classes = useStyles();\n\n  const scrollIntoView = () => {\n    //console.log(newsDisplayRef.current);\n    newsDisplayRef.current.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"nearest\",\n      inline: \"start\",\n    });\n  };\n\n  const newsDisplayRef = useRef();\n\n  return (\n    <div>\n      <CssBaseline />\n\n      <Container\n        style={{ alignItems: \"stretch\", padding: \"0\" }}\n        maxWidth={false}\n      >\n        <Typography\n          component=\"div\"\n          className={classes.typographyStyle}\n          style={{ backgroundColor: \"#283618\", overflowY: \"hidden\" }}\n          ref={newsDisplayRef}\n        >\n          {WhatToDisplay()}\n\n          {displayDataObj.newsAvailable ? (\n            <ArticleList articlesToDisplay={newsArray} />\n          ) : null}\n        </Typography>\n      </Container>\n    </div>\n  );\n};\n\nexport default NewsDisplay;\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/SearchBar/searchbar.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/Map/getNews.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/Map/getplacename.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/NewsDisplay/articlelist.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/intro.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/applinks/cardscomponent/cards.js",["228","229"],"import React from 'react';\nimport './cards.css';\nimport Card from '../../../project_layout/appiconcard.png'\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nconst Cards = (props) => {\n\n  \n    return (\n\n        // ICON CARD\n        <div className='card-component-wrapper bob-on-hover'>\n      \n            <img src = {Card} alt ='app' className='card-img'/>\n            <div className='text-wrapper'>\n                <h3 className='app-title'> {props.appTitle} </h3>\n                <img src = {props.logo} className='logo' alt='app-logo'/>\n                <p className='description-txt'> {props.Description}</p>\n                <p className='description-txt tech'> Technologies: {props.stackList}</p>\n\n               \n                    { props.btnOneTxt === 'View ReadMe' ?  \n\n                        <button className='more-info-btn view-code'> <a href = {props.githubUrl}\n                        style = {{color: '#B7861B', textDecoration:'none'}} target=\"_blank\" rel=\"noopener noreferrer\"\n                        >  View ReadMe  </a> </button>\n                        \n                    :\n                    <div className='btns-div'> \n                        <button className='more-info-btn learn-more'> <a href = {props.url}\n                            style = {{color: '#B7861B', textDecoration:'none'}} target=\"_blank\" rel=\"noopener noreferrer\">\n                        {props.btnOneTxt} </a> </button> \n\n                            <button className='more-info-btn view-code'> <a href = {props.githubUrl}\n                            style = {{color: '#B7861B', textDecoration:'none'}} target=\"_blank\" rel=\"noopener noreferrer\"\n                            >  View Code  </a> </button>\n\n                    </div>\n        }\n            </div>\n         \n      </div>\n   \n    )\n}\n\nexport default Cards;\n\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/socials/socials.js",["230"],"import React from \"react\";\nimport LinkedInIcon from \"../../project_layout/socialicons/linkedin.png\"\nimport GithubIcon from \"../../project_layout/socialicons/github.png\"\nimport TwitterIcon from \"../../project_layout/socialicons/twitter.png\"\nimport EmailIcon from \"../../project_layout/socialicons/email.png\"\n\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\n\nconst Socials = (props) => {\n\n    return (\n        <div>\n            <nav className={props.sidebarStatus && window.innerWidth > 701 ? \"slide-out\" : \"socials-wrapper slide-in\"}>\n                <ul>\n                    <li> <a href = \"https://www.linkedin.com/in/nissimram/\"   target=\"_blank\" rel=\"noopener noreferrer\"> \n                            <img src = {LinkedInIcon} alt = \"Nissim Ram's LinkedIn\"/> \n                        </a>\n                    </li>\n              \n                    <li> \n                        <a href = \"https://twitter.com/NizoomRam\"   target=\"_blank\" rel=\"noopener noreferrer\"> \n                             <img src = {TwitterIcon} alt = \"Nissim Ram's Twitter\"/>\n                        </a> \n                    \n                    </li>\n              \n                    <li> \n                         <a href = \"  https://github.com/nizoom\"   target=\"_blank\" rel=\"noopener noreferrer\"> \n                        \n                             <img src = {GithubIcon} alt = \"Nissim Ram's GitHub\"/> \n\n                        </a>\n                    \n                    </li>\n                    <li> \n                         <Link to=\"/contact\"  rel=\"noopener noreferrer\">\n                            <img src = {EmailIcon} alt = \"Nissim Ram's Contact\"/> \n                         </Link>\n                    </li>\n                   \n                </ul>\n            </nav>\n        </div>\n    )\n}\n\nexport default Socials;","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/applinks/cardscomponent/infopopup.js",["231","232"],"import React, {useEffect, useRef, useState} from \"react\";\nimport \"./infopopup.css\"\nimport TemplateGif from \"../../../project_layout/tytemplate.gif\"\nimport LandscapeGif from \"../../../project_layout/landscape-template.gif\"\nimport TabletGif from \"../../../project_layout/tablet-template.gif\"\nimport MobileGif from \"../../../project_layout/mobile-template.gif\"\nimport LargeMobileGif from \"../../../project_layout/lrg-mobil-template.gif\"\n\n\n\nconst InfoPopUp = (props) => {\n\n       \n    function selectGifType(){\n        \n       switch(true){\n           case windowWidth > 1400 : \n             return TemplateGif;\n             \n          case windowWidth <= 1400 && windowWidth > 830 : \n            return LandscapeGif\n            \n          case windowWidth <= 830 && windowWidth > 700: \n              return TabletGif \n\n          case windowWidth <= 700 && windowWidth > 470:\n              return LargeMobileGif\n\n          case windowWidth <= 470: \n              return MobileGif \n       }\n\n    }\n\n    const [windowWidth, setWindowWidth] = useState(window.innerWidth);\n\n\n    const gifPopUpStatus = useRef(false)\n\n    function handleResize(){\n        const windowWidth = window.innerWidth;\n        setWindowWidth(windowWidth)\n    }\n\n    useEffect(() => {\n\n\n        selectGifType()\n\n\n            window.addEventListener('resize', handleResize)\n\n        \n            return () => {\n                window.removeEventListener(\"resize\", handleResize)\n            }\n\n    })\n    \n\n\n\n\n    const selectAppText = () => {\n       \n            // Switch statement to determine app details text\n\n         if(props.projectInFocus === 'TY Email Builder'){\n            gifPopUpStatus.current = true\n                    \n            return <div className = 'template-gif-wrapper'> \n                    <p> An employee-facing web app that provides a user interface to fill out templated thank you emails for physical checks that come in the mail.</p>\n                    <img src = {selectGifType()} className = 'template-gif' alt = 'gif of template building app in use'/>\n\n                    </div>\n         }\n\n         if(props.projectInFocus ==='Try Global News'){\n            gifPopUpStatus.current = false\n            return <p> Global news is a novel way to access information about the world. The user is presented with a world map and with a map click can learn about that place from a list of news articles generated from that location. The longitude and latitude from a map click is converted, using Google Cloud services, to a human readable address. The address is iterated through Azure's news API until relevant news appears. The user can also narrow their search by entering a keyword before clicking on the map. That key word will then be added to the parameters of the API query.</p>          \n        \n         }\n         if(props.projectInFocus ==='Try Echochamber'){\n            gifPopUpStatus.current = false\n            return <p> The Echo Chamber is a web scraping app that provides a peak into the public social network of your favorite public figures, artists, and friends. Enter a Twitter handle and see all the most recent posts from their followers. The project utilizes Twitter’s API to receive the data and then uses a Node backend to process the Tweets in chronological order. The result is a list of sequenced clickable Tweets.  A custom world cloud also consolidates all verbal content to demonstrate frequency of words. Using the app provides a more wholistic picture of that individual's interests and shared communities.</p>      \n        \n         }\n         if(props.projectInFocus ==='TY Email Automation'){\n            gifPopUpStatus.current = false\n            return <p> The TY Automation program was built for the non-profit Common Threads Project to automate the process of sending Thank You emails to donors. I set up a daily cron job to hit an endpoint on an ExpressJS app. The Express app queries their donation widget API which responds with the donations from the day. The program will then define the gifts by donor category (new, recurring, monthly, and in tribute). The assessed data for each gift are passed to a corresponding email template based on the donation category. These templates were built with HTML, CSS, and Handlebars. My node application then sends the filled out the email to the donor. I am currently working on updating their CRM for each donation as well. </p>\n        \n         }\n         if(props.projectInFocus ==='Try Build NYC'){\n            gifPopUpStatus.current = false\n            return <p> Built NYC is a data visualization tool that explores building development in New York City. Using a data base provided by NYC Open Data the user can filter building demolitions / constructions by year and borough on a location specific map. Each location is a clickable pin that displays the address, owner, and contracting company of the site. I Built an API to receive requests from the app which converts those requests into Socrata Query Language. This QL is used to fetch building data. Data visualizations are supplemented by charts that illustrate a breakdown of construction permits by type and construction trends for the last 30 years. </p>\n        \n         }\n         if(props.projectInFocus ==='Twitter API Clone'){\n            gifPopUpStatus.current = false\n            return <p> A group project with FastTrack Cook Systems where we implemented an API that exposes operations for social media data that resembles the conceptual model of Twitter. We implemented this API from scratch, \n                working from a series of endpoint specifications to develop a mental model of the data. We developed a suitable database schema and wrote Spring services,\n                 controllers to handle requests, perform validation and business logic, and to transform data between the API and database models.</p>\n         }\n\n        \n        }\n\n\n\n    const closePopup = (event) => {\n        props.handlePopupClick(props.appTitle)\n\n    }\n\n\n\n    return(\n\n        <div className={props.status  && props.projectInFocus == props.appTitle? \"popup-background\" : \"hide\" }>\n\n                {!gifPopUpStatus.current ? \n\n                <div className={`popup-wrapper ${props.position}`} >\n                \n\n                        <article className={props.status ? \"popup-text\" : \"hide-popup-text\" }>\n                            {selectAppText()}\n                        </article> \n\n            \n                        <div className={props.status ? \"button-div\" : \"hide-button-div\" }>\n                            <a href = {props.url} target=\"_blank\" rel=\"noopener noreferrer\"> \n                            \n                                <button className=\"base-more-info-btn btn-border pop-up-btn\">Visit </button>\n\n                            </a> \n                            <button className=\"base-more-info-btn btn-border pop-up-btn\" onClick = {closePopup}> Close </button>\n                        </div>\n                </div>\n \n                : <div className={`popup-wrapper ${props.position}`} >\n\n                        <article className={props.status ? \"gif-popup-text\" : \"hide-popup-text\" }>\n                            {selectAppText()}\n                        </article> \n\n                        <div className={props.status ? \"gif-button-div\" : \"hide-button-div\" }>\n                            <a href = {props.url} target=\"_blank\" rel=\"noopener noreferrer\"> \n\n                            <button className=\"base-more-info-btn btn-border pop-up-btn\">Visit </button>\n\n                            </a> \n                            <button className=\"base-more-info-btn btn-border pop-up-btn\" onClick = {closePopup}> Close </button>\n                        </div>\n                        \n                 </div>\n                    }\n        </div>\n          \n\n    )\n}\n\nexport default InfoPopUp;\n",["233","234"],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/About/aboutglobalnews.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/localstorage/localstorage.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/dropdown/dropdown.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Components/blog_posts/post_five.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/resume.js",["235"],"import React, {useState} from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./css/resume.css\"\n\nimport Logo from \"../Components/logo/logo\"\nimport Sidebar from \"../Components/sidebar/sidebar\";\nimport DownloadIcon from \"../project_layout/download.jpg\"\nimport ResumePDF from \"../project_layout/RamNissimResume.pdf\"\n\nconst Resume = () => {\n\n    // hide resume download btn when sidebar is active\n    const [dlBtn, setDlBtn] = useState(true)\n\n    const sidebarHandler = () => {\n        setDlBtn(!dlBtn)\n    } \n\n    return (\n        <div className=\"resume-page-wrapper\">\n            <Logo/>\n            <div className=\"top-right-div\">\n                <Sidebar clickHandler={sidebarHandler}/>\n                <a  href={ResumePDF}rel=\"noreferrer\"  target=\"_blank\" download>\n                   { dlBtn ? <button className=\"download\"> <img  src = {DownloadIcon} alt='download-resume'/> </button> : null }\n                </a>\n\n            </div>\n           \n           \n           <section className=\"resume-wrapper\">\n            <h3 className=\"section-header\"> Skills </h3>\n            <p className=\"body-paragraph\">\n            JavaScript, React, Node, Next, Express, HTML5, CSS3, Material UI, Figma, Google Cloud, Azure, PostGreSQL, Java, Spring, SpringBoot, Maven, Eclipse, Git, GitHub      </p>\n\n        \n\n           <h3 className=\"section-header\"> Professional Experience</h3>\n           <div className=\"experience-section\">\n                <div className=\"title-dates-split\">\n                    <h3 className=\"experience-name\"> Common Threads Project, <span className=\"position\">Software Developer</span></h3> \n                    <h3 className=\"date\">  06/21 – present </h3>\n                \n                </div>\n                \n\n                <ul className=\"list\">\n                    <li>Analyzed donation intake system and took feedback from admins for possible improvements.</li>\n                    <li>Designed system workflow to automate the intake process for org director.</li>\n                    <li>Built Node app to run daily queries for new donations, update org databases,\n                        and send dynamic thank you emails.</li>\n                    <li>Created employee-facing multi-form React app to assist with thank you email generation derived from mailed checks.</li>\n                </ul>\n\n\n                <div className=\"title-dates-split\">\n                    <h3 className=\"experience-name\"> Cook Systems,  <span className=\"position\">FastTrack Developer Graduate</span>  </h3> \n                    <h3 className=\"date\">  06/22 – 08/22</h3>\n                \n                </div>\n            \n                <ul className=\"list\">\n                    <li>Collaborated with other engineers to build applications during simulated Agile sprints (React frontend, Java SpringBoot backend).</li>\n                    <li>Team lead for building out and testing backend endpoints for a Twitter API clone in Java.</li>\n                    <li>Contributed to the functionality of a full stack company dashboard React app where administrators login to create teams, projects, and announcements.</li>\n  \n                </ul>\n\n\n                <div className=\"title-dates-split\">\n                    <h3 className=\"experience-name\"> Nissimram.com, <span className=\"position\"> Freelance Developer </span>  </h3> \n                    <h3 className=\"date\">    08/21 – 11/21</h3>\n                \n                </div>\n            \n                <ul className=\"list\">\n                    <li>Designed, built, and deployed multiple full-stack React apps using responsive CSS. Projects showcase data visualization, API integration, and web scraping. </li> \n                    <li>Documented production process through blog posts I wrote to log my coding journey. </li>\n                   \n                </ul>\n\n\n                <div className=\"title-dates-split\">\n                    <h3 className=\"experience-name\"> Fragomen LLP,  <span className=\"position\">Assitant Paralegal</span>  </h3> \n                    <h3 className=\"date\"> 11/18 – 03/20 </h3>\n                \n                </div>\n            \n                <ul className=\"list\">\n                    <li>Maintained flow of business by processing large volume of active immigration matters under strict deadlines for corporate / individual clients related to nonimmigrant visas, permanent residence and citizenship. </li>\n                    <li>Ensured positive client relations by promptly communicating with and provide support for client HR representatives and foreign national employees.</li>\n                    <li>Thoroughly summarized job duties and responsibilities for specialized visa applications for those seeking H1-B, L-1, and TN status. </li>\n                </ul>\n\n\n\n                <h3 className=\"section-header\"> Education</h3>\n            \n                <div className=\"title-dates-split\">\n                    <h3 className=\"experience-name\"> Cook Systems FastTrack Java Program </h3> \n                    <h3 className=\"date\">  06/22 – 08/22  </h3>\n                \n                </div>\n                <p className=\"education-paragraph\"> Concentrated Java Frameworks and developer tools training</p>\n\n                <div className=\"title-dates-split\">\n                    <h3 className=\"experience-name\"> Brandeis University – Waltham, MA. </h3> \n                    <h3 className=\"date\">   09/14 – 05/18 </h3>\n                \n                </div>\n                <p className=\"education-paragraph\">B.S. in History and Anthropology </p>\n\n\n           </div>\n\n            </section>\n        </div>\n    )\n}\n\nexport default Resume;","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/myGa.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/landingpage.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/GNlogin.js",["236","237"],"import \"./styles/compiledCss/auth.css\";\nimport { useHistory } from \"react-router-dom\";\nimport { signInWithEmailAndPassword } from \"firebase/auth\";\nimport React, { useRef, useState } from \"react\";\nimport { auth } from \"./config/firebase\";\nimport { validateLogin } from \"./functions/firebasefuncs\";\nconst GNLogin = () => {\n  const emailRef = useRef();\n  const pwRef = useRef();\n  const [err, setErr] = useState(false);\n  const history = useHistory();\n  const submitLogin = async (e) => {\n    setErr(false);\n    e.preventDefault();\n    const email = emailRef.current.value;\n    const pw = pwRef.current.value;\n    const valid = validateLogin(email, pw);\n    if (valid) {\n      const result = await signInWithEmailAndPassword(auth, email, pw)\n        .then((userCredential) => {\n          // Signed in\n          const user = userCredential.user;\n          console.log(user);\n          history.push(\"/globalnews/home\");\n\n          // ...\n        })\n        .catch((error) => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          console.log(errorMessage);\n          setErr(errorMessage);\n        });\n    } else {\n      setErr(\"Please enter a valid email and password\");\n    }\n  };\n  return (\n    <div className=\"gn-authpage-wrapper\">\n      <section>\n        {err ? (\n          <p\n            className=\"err\"\n            style={{ textAlign: \"center\", marginBottom: \"10px\" }}\n          >\n            {err}\n          </p>\n        ) : null}\n        <div className=\"gn-auth-form-wrapper\">\n          <form className=\"gn-auth-form\">\n            <h3 className=\"gn-auth-title\">Login</h3>\n            <div className=\"gn-form-section\">\n              <label htmlFor=\"email\"> Email</label>\n              <input id=\"email\" type=\"email\" name=\"email\" ref={emailRef} />\n            </div>\n            <div className=\"gn-form-section\">\n              <label htmlFor=\"Password\"> Password</label>\n              <input\n                id=\"password\"\n                type=\"password\"\n                name=\"password\"\n                ref={pwRef}\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"gn-login-btns\"\n              onClick={submitLogin}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default GNLogin;\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/GNSignup.js",["238","239"],"import React from \"react\";\nimport { useRef, useState } from \"react\";\nimport \"./styles/compiledCss/auth.css\";\nimport { validateSignup } from \"./functions/firebasefuncs\";\nimport { auth } from \"./config/firebase\";\nimport { useHistory } from \"react-router-dom\";\nimport { createUserWithEmailAndPassword } from \"firebase/auth\";\n\nconst GNSignup = () => {\n  const emailRef = useRef();\n  const pwRef = useRef();\n  const cfmPwRef = useRef();\n\n  const history = useHistory();\n  const [err, setErr] = useState(\"\");\n  const [successMsg, setSuccessMsg] = useState(false);\n  const submitSignup = async (e) => {\n    e.preventDefault();\n    setErr(\"\");\n    const email = emailRef.current.value;\n    const pw = pwRef.current.value;\n    const cfmPw = cfmPwRef.current.value;\n    if (validateSignup(email, pw, cfmPw)) {\n      const result = await createUserWithEmailAndPassword(auth, email, pw)\n        .then((userCredential) => {\n          // Created successfully\n          // const user = userCredential.user;\n          setSuccessMsg(\"Account created successfully. Redirecting...\");\n          setTimeout(() => {\n            history.push(\"/globalnews/landingpage\");\n          }, 2000);\n        })\n        .catch((error) => {\n          const errorCode = error.code;\n          const errorMessage = error.message;\n          setErr(errorMessage);\n        });\n    } else {\n      setErr(\"Please provid a valid email and matching passwords. \");\n    }\n  };\n  return (\n    <div className=\"gn-authpage-wrapper\">\n      <section>\n        {err ? (\n          <p\n            className=\"err\"\n            style={{ textAlign: \"center\", marginBottom: \"10px\" }}\n          >\n            {err}\n          </p>\n        ) : null}\n        {successMsg ? (\n          <p\n            className=\"gn-success-msg\"\n            style={{ textAlign: \"center\", marginBottom: \"10px\" }}\n          >\n            {successMsg}\n          </p>\n        ) : null}\n        <div className=\"gn-auth-form-wrapper\">\n          <form className=\"gn-auth-form\">\n            <h3 className=\"gn-auth-title\">Sign up</h3>\n            <div className=\"gn-form-section\">\n              <label htmlFor=\"email\"> Email</label>\n              <input\n                id=\"email\"\n                type=\"email\"\n                name=\"email\"\n                ref={emailRef}\n                required\n              />\n            </div>\n            <div className=\"gn-form-section\">\n              <label htmlFor=\"Password\"> Password</label>\n              <input\n                id=\"password1\"\n                type=\"password\"\n                name=\"password\"\n                ref={pwRef}\n                required\n              />\n            </div>\n            <div className=\"gn-form-section\">\n              <label htmlFor=\"Password\"> Confirm password </label>\n              <input\n                id=\"password2\"\n                type=\"password\"\n                name=\"password\"\n                ref={cfmPwRef}\n                required\n              />\n            </div>\n            <button\n              type=\"submit\"\n              className=\"gn-login-btns\"\n              onClick={submitSignup}\n            >\n              Submit\n            </button>\n          </form>\n        </div>\n      </section>\n    </div>\n  );\n};\n\nexport default GNSignup;\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/config/firebase.js",["240"],"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAnalytics } from \"firebase/analytics\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCz5l1FHBkUdtkj-tTWnj1Bf6KxuD9plIU\",\n  authDomain: \"globalnews-58f1d.firebaseapp.com\",\n  projectId: \"globalnews-58f1d\",\n  storageBucket: \"globalnews-58f1d.appspot.com\",\n  messagingSenderId: \"222094954462\",\n  appId: \"1:222094954462:web:b07d2ce78536b53452d74f\",\n  measurementId: \"G-Z7KP78TRRG\",\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst analytics = getAnalytics(app);\n\nexport const auth = getAuth(app);\nexport const provider = new GoogleAuthProvider();\n// might have to make another provider for email/ pw?\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/GNhome.js",["241","242"],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/savedplaces.js",["243"],"// drop down to show the user the locations they saved which they click and quickly see news about\n\nimport React, { useState, useEffect } from \"react\";\n\nconst SavedPlacesDropdown = (props) => {\n  const [dropdwnStatus, setDropdwnStatus] = useState({\n    firstLoad: true,\n    status: false,\n    className: \"preload\",\n  });\n  const placeholderPlaces = [\n    \"Savannah, Georgia\",\n    \"Lemon, Australia\",\n    \"Svalbard, Russia\",\n    \"Rio De Jainairo, Brazil\",\n    \"Savannah, Georgia\",\n  ];\n\n  const toggleDropdownClass = () => {\n    if (dropdwnStatus.firstLoad) {\n      setDropdwnStatus({\n        firstLoad: false,\n        status: false,\n        className: \"preload\",\n      });\n    } else {\n      if (!dropdwnStatus.status) {\n        setDropdwnStatus({\n          firstLoad: false,\n          status: true,\n          className: \"savedplaces-list\",\n        });\n      } else {\n        setDropdwnStatus({\n          firstLoad: false,\n          status: false,\n          className: \"savedplaces-list-closed\",\n        });\n      }\n    }\n  };\n\n  useEffect(() => {\n    toggleDropdownClass();\n  }, []);\n\n  const renderLocations = () => {\n    return placeholderPlaces.map((place) => {\n      return (\n        <li value={place} key={Math.random().toString()} className=\"place-item\">\n          <button className=\"remove-place-btn\">\n            {\" \"}\n            <span> - </span>{\" \"}\n          </button>\n          <p>{place}</p>\n        </li>\n      );\n    });\n  };\n\n  return (\n    <div className=\"savedplaces-component-wrapper\">\n      <label\n        htmlFor=\"locations\"\n        className=\"locations-dropdwn-label\"\n        onClick={toggleDropdownClass}\n      >\n        Saved locations\n      </label>\n      <ul className={dropdwnStatus.className} name=\"locations\">\n        {/* iterate over places to create option elements */}\n        {renderLocations()}\n      </ul>\n    </div>\n  );\n};\n\nexport default SavedPlacesDropdown;\n","/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/current.js",[],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/Components/Bulletin/bulletin.js",["244"],"/Users/nissimram/Desktop/Programming/Portfolio/Portfolio/src/Pages/apps/globalnews/src/functions/firebasefuncs.js",[],{"ruleId":"245","replacedBy":"246"},{"ruleId":"247","replacedBy":"248"},{"ruleId":"249","severity":1,"message":"250","line":4,"column":20,"nodeType":"251","messageId":"252","endLine":4,"endColumn":26},{"ruleId":"253","severity":1,"message":"254","line":47,"column":7,"nodeType":"255","endLine":47,"endColumn":9,"suggestions":"256"},{"ruleId":"249","severity":1,"message":"257","line":14,"column":55,"nodeType":"251","messageId":"252","endLine":14,"endColumn":67},{"ruleId":"245","replacedBy":"258"},{"ruleId":"247","replacedBy":"259"},{"ruleId":"253","severity":1,"message":"260","line":34,"column":6,"nodeType":"255","endLine":34,"endColumn":20,"suggestions":"261"},{"ruleId":"249","severity":1,"message":"250","line":3,"column":27,"nodeType":"251","messageId":"252","endLine":3,"endColumn":33},{"ruleId":"249","severity":1,"message":"250","line":2,"column":27,"nodeType":"251","messageId":"252","endLine":2,"endColumn":33},{"ruleId":"249","severity":1,"message":"262","line":72,"column":9,"nodeType":"251","messageId":"252","endLine":72,"endColumn":21},{"ruleId":"253","severity":1,"message":"263","line":80,"column":8,"nodeType":"255","endLine":80,"endColumn":30,"suggestions":"264"},{"ruleId":"249","severity":1,"message":"250","line":4,"column":27,"nodeType":"251","messageId":"252","endLine":4,"endColumn":33},{"ruleId":"249","severity":1,"message":"265","line":4,"column":35,"nodeType":"251","messageId":"252","endLine":4,"endColumn":39},{"ruleId":"249","severity":1,"message":"250","line":7,"column":27,"nodeType":"251","messageId":"252","endLine":7,"endColumn":33},{"ruleId":"266","severity":1,"message":"267","line":16,"column":8,"nodeType":"268","messageId":"269","endLine":31,"endColumn":9},{"ruleId":"270","severity":1,"message":"271","line":119,"column":63,"nodeType":"272","messageId":"273","endLine":119,"endColumn":65},{"ruleId":"245","replacedBy":"274"},{"ruleId":"247","replacedBy":"275"},{"ruleId":"249","severity":1,"message":"265","line":2,"column":10,"nodeType":"251","messageId":"252","endLine":2,"endColumn":14},{"ruleId":"249","severity":1,"message":"276","line":19,"column":13,"nodeType":"251","messageId":"252","endLine":19,"endColumn":19},{"ruleId":"249","severity":1,"message":"277","line":29,"column":17,"nodeType":"251","messageId":"252","endLine":29,"endColumn":26},{"ruleId":"249","severity":1,"message":"276","line":24,"column":13,"nodeType":"251","messageId":"252","endLine":24,"endColumn":19},{"ruleId":"249","severity":1,"message":"277","line":34,"column":17,"nodeType":"251","messageId":"252","endLine":34,"endColumn":26},{"ruleId":"249","severity":1,"message":"278","line":22,"column":7,"nodeType":"251","messageId":"252","endLine":22,"endColumn":16},{"ruleId":"249","severity":1,"message":"279","line":8,"column":10,"nodeType":"251","messageId":"252","endLine":8,"endColumn":22},{"ruleId":"270","severity":1,"message":"271","line":41,"column":28,"nodeType":"272","messageId":"273","endLine":41,"endColumn":30},{"ruleId":"253","severity":1,"message":"280","line":45,"column":6,"nodeType":"255","endLine":45,"endColumn":8,"suggestions":"281"},{"ruleId":"282","severity":1,"message":"283","line":61,"column":1,"nodeType":"284","messageId":"285","endLine":68,"endColumn":2},"no-native-reassign",["286"],"no-negated-in-lhs",["287"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["288"],"'isSubmitting' is assigned a value but never used.",["286"],["287"],"React Hook useEffect has missing dependencies: 'errors' and 'submitForm'. Either include them or remove the dependency array. If 'submitForm' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["289"],"'assessedData' is assigned a value but never used.","React Hook useEffect has an unnecessary dependency: 'props.dataForDisplay'. Either exclude it or remove the dependency array. Outer scope values like 'props.dataForDisplay' aren't valid dependencies because mutating them doesn't re-render the component.",["290"],"'Link' is defined but never used.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["286"],["287"],"'result' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'analytics' is assigned a value but never used.","'useAuthState' is defined but never used.","React Hook useEffect has a missing dependency: 'toggleDropdownClass'. Either include it or remove the dependency array.",["291"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","no-global-assign","no-unsafe-negation",{"desc":"292","fix":"293"},{"desc":"294","fix":"295"},{"desc":"296","fix":"297"},{"desc":"298","fix":"299"},"Update the dependencies array to be: [history]",{"range":"300","text":"301"},"Update the dependencies array to be: [errors, isSubmitting, submitForm]",{"range":"302","text":"303"},"Update the dependencies array to be: []",{"range":"304","text":"305"},"Update the dependencies array to be: [toggleDropdownClass]",{"range":"306","text":"307"},[1485,1487],"[history]",[685,699],"[errors, isSubmitting, submitForm]",[2491,2513],"[]",[1080,1082],"[toggleDropdownClass]"]